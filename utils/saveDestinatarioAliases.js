// Agregar despu√©s de checkSimilarDestinatario

const supabase = require("../supabase");

// üíæ Guardar aliases de destinatario en Supabase
// Reemplazar la funci√≥n saveDestinatarioAliases en utils/saveDestinatarioAliases.js
// üíæ Guardar aliases de destinatario en Supabase (versi√≥n mejorada)
const saveDestinatarioAliases = async (destinatarioId, aliases) => {
  try {
    if (!aliases || aliases.length === 0) {
      console.log("‚ÑπÔ∏è No hay aliases para guardar");
      return true;
    }
    
    console.log(`üíæ Guardando ${aliases.length} aliases para destinatario ID: ${destinatarioId}`);
    
    // Preparar datos para inserci√≥n
    const aliasesData = aliases.map(alias => ({
      destinatario_id: destinatarioId,
      alias: alias.trim()
    }));
    
    // Insertar todos los aliases v√°lidos
    const { data, error } = await supabase
      .from('destinatario_aliases')
      .insert(aliasesData)
      .select();
    
    if (error) {
      console.error("‚ùå Error guardando aliases:", error);
      
      // Si hay error de duplicado, intentar guardar uno por uno
      if (error.message.includes('duplicate') || error.message.includes('unique')) {
        console.log("üîÑ Intentando guardar aliases uno por uno...");
        return await saveAliasesOneByOne(destinatarioId, aliases);
      }
      
      return false;
    }
    
    console.log(`‚úÖ ${data.length} aliases guardados exitosamente`);
    return true;
    
  } catch (error) {
    console.error('‚ùå Error en saveDestinatarioAliases:', error.message);
    return false;
  }
};

// üîÑ Guardar aliases uno por uno (fallback para duplicados)
const saveAliasesOneByOne = async (destinatarioId, aliases) => {
  let savedCount = 0;
  let errorCount = 0;
  
  for (const alias of aliases) {
    try {
      const { error } = await supabase
        .from('destinatario_aliases')
        .insert([{
          destinatario_id: destinatarioId,
          alias: alias.trim()
        }]);
      
      if (error) {
        if (error.message.includes('duplicate') || error.message.includes('unique')) {
          console.log(`‚ö†Ô∏è Alias "${alias}" ya existe - omitido`);
        } else {
          console.error(`‚ùå Error guardando alias "${alias}":`, error.message);
          errorCount++;
        }
      } else {
        console.log(`‚úÖ Alias "${alias}" guardado`);
        savedCount++;
      }
      
    } catch (error) {
      console.error(`‚ùå Error procesando alias "${alias}":`, error.message);
      errorCount++;
    }
  }
  
  console.log(`üìä Resumen: ${savedCount} guardados, ${errorCount} errores`);
  return savedCount > 0; // √âxito si se guard√≥ al menos uno
};

module.exports = saveDestinatarioAliases;